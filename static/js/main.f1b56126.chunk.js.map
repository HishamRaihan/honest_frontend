{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/assets/squeege.png","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/assets/DJob/BA1.jpeg","components/assets/DJob/BA2.jpeg","components/assets/DJob/BA3.jpeg","components/Carousel/Carousel.jsx","components/Home/HomePage.jsx","api/job.js","components/jobs/Date/JobDate.jsx","components/jobs/Index/IndexJobs.jsx","components/jobs/JobForm/JobForm.jsx","components/jobs/Create/CreateJob.jsx","components/jobs/Show/OneJob.jsx","components/auth/IndexUsers.js","components/jobs/AllForOneUser/AllJobsForOneUser.jsx","components/jobs/Edit/EditJob.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","title","Header","user","Navbar","expand","Container","Brand","style","color","textDecoration","src","squeege","width","height","Toggle","aria-controls","Collapse","Nav","collapseOnSelect","username","apiUrls","apiUrl","window","location","hostname","signUp","email","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","indexUser","get","SignUp","msgAlert","setUser","setUserName","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","CarouselPage","BA1","BA2","BA3","HomePage","props","createJob","company","description","budget","date","job","indexJobs","indexUsersJobs","showJob","deleteJob","updateJob","JobDate","newDate","Date","month","toLocaleString","year","getFullYear","day","IndexJobs","jobs","setJobs","response","getJobs","length","Spinner","animation","role","jobList","map","featured","alt","owner","_id","format","createdAt","JobForm","handleSubmit","setTitle","setCompany","setDescription","setBudget","setDate","CreateJobs","createdId","setCreatedId","OneJob","setJob","deleted","setDeleted","useParams","fetchData","handleDeleteClick","onClick","AllUsers","allUsers","setAllUsers","users","getUsers","userList","AllJobsForOneUser","usersJobs","setUsersJobs","getAllJobs","EditJob","updated","setUpdated","Footer","App","msgAlerts","setMsgAlerts","uuid","exact","path","element","CreateJob","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1b56126.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","export default __webpack_public_path__ + \"static/media/squeege.fc1c1b23.png\";","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\nimport squeege from '../assets/squeege.png'\n// import { AiOutlineSetting } from 'react-icons/ai'\nimport { FcHome } from 'react-icons/fc'\nimport './Header.scss'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/jobs/owner' className='nav-link '> Your Jobs </NavLink>\n    <NavLink to='/jobs/create' className='nav-link '>Create Job</NavLink>\n    <NavLink to='/users/' className='nav-link makePost'>List of Users </NavLink>\n    <NavLink to='/jobs' className='nav-link '>All Jobs</NavLink>\n    {/* <FcEngineering />\n    <AiOutlineSetting className='settings' /> */}\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>Register</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'> <FcHome title='Home'/></NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  // into the navbar style={{ height: '50px' }}\n  <Navbar className='nav' variant='dark' expand='md' >\n    <Container >\n      <Navbar.Brand>\n        {/* <img src={squeege} width='60px' height='60px' variant='light'/> */}\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>\n          <img src={squeege} width='50px' height='50 px'/></Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto' collapseOnSelect>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.username}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://dry-tundra-83070.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (username, email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      username,\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (username, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      username,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\nexport const indexUser = (user) => {\n  return axios.get(\n    `${apiUrl}/users/`,\n    // Pass along the authorization which includes our user's token\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [username, setUserName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(username, email, password, passwordConfirmation)\n      const res = await signIn(username, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setUserName('')\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>User Registration</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='username'>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              name='username'\n              value={username}\n              placeholder='Enter Username'\n              onChange={event => setUserName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [username, setUserName] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(username, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setUserName('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='username'>\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              required\n              type='text'\n              // name='email'\n              value={username}\n              placeholder='Enter Username'\n              onChange={event => setUserName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","export default __webpack_public_path__ + \"static/media/BA1.f9f6cfca.jpeg\";","export default __webpack_public_path__ + \"static/media/BA2.8ebf0729.jpeg\";","export default __webpack_public_path__ + \"static/media/BA3.ded67f8a.jpeg\";","import React from 'react'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css' // requires a loader\nimport { Carousel } from 'react-responsive-carousel'\nimport BA1 from '../assets/DJob/BA1.jpeg'\nimport BA2 from '../assets/DJob/BA2.jpeg'\nimport BA3 from '../assets/DJob/BA3.jpeg'\n// import './Carousel.scss'\nexport default function CarouselPage () {\n  return (\n    <Carousel>\n      <div>\n        <img src={BA1} />\n        <p className=\"legend\">Legend 1</p>\n      </div>\n      <div>\n        <img src={BA2} />\n        <p className=\"legend\">Legend 2</p>\n      </div>\n      <div>\n        <img src={BA3} />\n        <p className=\"legend\">Legend 3</p>\n      </div>\n    </Carousel>\n  )\n};\n","import React from 'react'\n// import { Link } from 'react-router-dom'\nimport CarouselPage from '../Carousel/Carousel'\nimport '../Home/Home.scss'\n\nconst HomePage = (props) => {\n  if (props.user) {\n    return (\n      <>\n        <div className='HomeWrapper'>\n          <h1>Welcome, {props.user.username}</h1>\n        </div>\n        <CarouselPage />\n      </>\n    )\n  } else {\n    return (\n      <div className='HomePage'>\n        {/* <h1>Hello Im Home</h1>\n        <p>Please Sign Up</p>\n        <Link to='/sign-up'>\n          <button>Sign up</button>\n        </Link>\n        <Link to='/sign-in'>\n          <button>Sign in</button>\n        </Link> */}\n      </div>\n    )\n  }\n}\n\nexport default HomePage\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const createJob = (title, company, description, budget, date, user) => {\n  return axios.post(\n    `${apiUrl}/jobs/`,\n    { job: { title, company, description, budget, date } },\n    // Pass along the authorization which includes our user's token\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\nexport const indexJobs = (user) => {\n  return axios.get(\n    `${apiUrl}/jobs/`,\n    // Pass along the authorization which includes our user's token\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\nexport const indexUsersJobs = (user) => {\n  return axios.get(\n    `${apiUrl}/jobs/owner/`,\n    // Pass along the authorization which includes our user's token\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\nexport const showJob = (id, user) => {\n  return axios.get(`${apiUrl}/jobs/${id}/`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const deleteJob = (id, user) => {\n  return axios.delete(`${apiUrl}/jobs/${id}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updateJob = (id, title, company, description, budget, date, user) => {\n  return axios.patch(\n    `${apiUrl}/jobs/${id}`,\n    { job: { title, company, description, budget, date } },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React from 'react'\n// import './TaskDate.css'\nimport '../Date/JobDate.scss'\n\nconst JobDate = (props) => {\n  const newDate = new Date(props.date)\n  const month = newDate.toLocaleString('en-US', { month: 'long' })\n  const year = newDate.getFullYear()\n  const day = newDate.toLocaleString('en-US', { day: '2-digit' })\n  return (\n    <div className='task-date'>\n      <div className='job-date__month'>{month}</div>\n      <div className='job-date__year'>{year}</div>\n      <div className='job-date__day'>{day}</div>\n    </div>\n  )\n}\n\nexport default JobDate\n","import React, { useEffect, useState } from 'react'\nimport { indexJobs } from '../../../api/job'\nimport { Link, Navigate } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { format } from 'timeago.js'\nimport './IndexJobs.scss'\nimport JobDate from '../Date/JobDate'\nconst IndexJobs = ({ user, msgAlert }) => {\n  const [jobs, setJobs] = useState([])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const getJobs = async () => {\n      try {\n        const response = await indexJobs(user)\n        setJobs(response.data.jobs)\n      } catch (error) {\n        // Alert the user, that they failed to sign up\n        msgAlert({\n          heading: 'Job Post cannot be displayed: ' + error.message,\n          message: 'Cannot index JobPost',\n          // this will be red\n          variant: 'danger'\n        })\n      }\n    }\n    getJobs()\n  }, [])\n\n  if (jobs.length === 0) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  }\n  const jobList = jobs.map(job => (\n    <div className={job.featured ? 'card fetured' : 'card'} key={job._id}>\n      <div className=\"top\">\n        <img className='left' alt=\"\" />\n        <img className='user' alt=\"\" />\n        <img className='right' alt=\"\" />\n      </div>\n      <div className=\"center\">\n        {job.description}\n      </div>\n      <div className=\"bottom\">\n        <h3>{job.owner.username}</h3>\n        <h4>{}</h4>\n      </div>\n      <h5>\n        <Link to={`/jobs/${job._id}`}>{job.company}</Link>\n      </h5>\n      <h5>{job.title}</h5>\n      <span className='jobDate'>{format(job.createdAt)}</span>\n      <h6>{job.description}</h6>\n      <h6>Budget: $ {job.budget} USD</h6>\n      <JobDate date={job.date} />\n      <h6>{job.owner.username} Job Posting</h6>\n    </div>\n  ))\n\n  return (\n    <div className='jobs' id='jobs'>\n      <h1>Job Board</h1>\n      <div className='container'>\n        {jobList}\n      </div>\n    </div>\n\n  )\n}\n\nexport default IndexJobs\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n// import { SendCheck } from 'react-bootstrap-icons'\n\nconst JobForm = ({ handleSubmit, title, company, description, budget, date, setTitle, setCompany, setDescription, setBudget, setDate }) => (\n  <Form onSubmit={handleSubmit}>\n    <Form.Group controlId='title'>\n      <Form.Label>Title</Form.Label>\n      <Form.Control\n        placeholder='Title'\n        name='title'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='company'>\n      <Form.Label>Company</Form.Label>\n      <Form.Control\n        placeholder='Company Name'\n        name='company'\n        value={company}\n        onChange={event => setCompany(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='description'>\n      <Form.Label>Description</Form.Label>\n      <Form.Control\n        placeholder='Please describe the job'\n        name='description'\n        value={description}\n        onChange={event => setDescription(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='budget'>\n      <Form.Label>Budget</Form.Label>\n      <Form.Control\n        placeholder=\"What's the budget?\"\n        name='budget'\n        value={budget}\n        onChange={event => setBudget(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='date'>\n      <Form.Label>Date</Form.Label>\n      <Form.Control\n        placeholder=\"When's the start date?\"\n        name='date'\n        type='date'\n        value={date}\n        onChange={event => setDate(event.target.value)}\n      />\n    </Form.Group>\n\n    <Button className='mt-2 Bttn' variant='primary' type='submit'>Submit Job Form</Button>\n    <div className='mt-5 footer' >We are pleased to be you partners</div>\n  </Form>\n)\nexport default JobForm\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { createJob } from '../../../api/job'\nimport JobForm from '../JobForm/JobForm.jsx'\n\nconst CreateJobs = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [company, setCompany] = useState('')\n  const [description, setDescription] = useState('')\n  const [budget, setBudget] = useState('')\n  const [date, setDate] = useState('')\n  const [createdId, setCreatedId] = useState(null)\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      const res = await createJob(title, company, description, budget, date, user)\n      setCreatedId(res.data.job._id)\n\n      msgAlert({\n        heading: 'Job Created',\n        message: `Created ${title} successfully.`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to create job post',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  // if user is null, redirect to home page\n  if (!user) {\n    return <Navigate to='/' />\n  } else if (createdId) {\n    // if movie has been created,Navigate to the 'show' page\n    return <Navigate to={`/jobs/${createdId}`} />\n  }\n  return (\n    <div className='row'>\n      <div className='col-md-3 mx-auto mt-5'>\n        <h3>Create Job Post</h3>\n        <JobForm\n          handleSubmit={handleSubmit}\n          company={company}\n          title={title}\n          description={description}\n          budget={+budget}\n          date={date}\n          setCompany={setCompany}\n          setTitle={setTitle}\n          setDescription={setDescription}\n          setBudget={setBudget}\n          setDate={setDate}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default CreateJobs\n","import React, { useState, useEffect } from 'react'\nimport { Link, Navigate, useParams } from 'react-router-dom'\nimport { Spinner, Button } from 'react-bootstrap'\nimport { deleteJob, showJob } from '../../../api/job'\nimport { format } from 'timeago.js'\nimport './OneJob.scss'\nimport JobDate from '../Date/JobDate'\n\nconst OneJob = ({ user, msgAlert }) => {\n  const [job, setJob] = useState(null)\n  const [deleted, setDeleted] = useState(false)\n  const { id } = useParams()\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await showJob(id, user)\n        setJob(res.data.job)\n        console.log(user)\n      } catch (error) {\n        msgAlert({\n          heading: 'Job failed to load this is coming from (Job.js Error)',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleDeleteClick = async () => {\n    try {\n      await deleteJob(id, user)\n      setDeleted(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to delete Job',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  // 3 states:\n  // If movie is `null`, we are loading\n  if (!job) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  } else if (deleted) {\n    return <Navigate to='/jobs' />\n  } else {\n    // We have a job, display it!\n    return (\n      <div className='job'>\n        <div className='JobWrapper'>\n          <h3>{job.company}\n            <span className='jobDate'>{format(job.createdAt)}</span>\n          </h3>\n          <p>Job Description: {job.description}</p>\n          <h6>Budget of: $ {job.budget}</h6>\n          <span>\n            Start Date:\n            <JobDate date={job.date}/>\n          </span>\n          <h6>{job.user}</h6>\n          <Link to={`/jobs/${id}/edit`}>\n            <Button className='Bttn' variant='primary' type='submit'>Update Job </Button>\n          </Link>\n          <Button className='Bttn' variant='danger' onClick={handleDeleteClick}>Delete Job </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OneJob\n","import React, { useEffect, useState } from 'react'\nimport { indexUser } from '../../api/auth'\nimport { Link, Navigate } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { format } from 'timeago.js'\n\nconst AllUsers = ({ user, msgAlert }) => {\n  const [allUsers, setAllUsers] = useState([])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const response = await indexUser(user)\n        setAllUsers(response.data.users)\n      } catch (error) {\n        // Alert the user, that they failed to sign up\n        msgAlert({\n          heading: 'Users Cant be displayed: ' + error.message,\n          message: 'Cant index Users',\n          // this will be red\n          variant: 'danger'\n        })\n      }\n    }\n    getUsers()\n  }, [])\n\n  if (allUsers.length === 0) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  }\n  const userList = allUsers.map(user => (\n    <div className='jobs' key={user._id}>\n      <Link to={`/jobs/${user._id}`}></Link>\n      <span className='jobDate'>{format(user.createdAt)}</span>\n      <h6>{user.username}</h6>\n    </div>\n  ))\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>All Users & Companies SOON!</h3>\n        <ul>{userList}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport default AllUsers\n","import React, { useEffect, useState } from 'react'\nimport { indexUsersJobs } from '../../../api/job'\nimport { Link, Navigate } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { format } from 'timeago.js'\nimport '../Index/IndexJobs.scss'\nimport JobDate from '../Date/JobDate'\nconst AllJobsForOneUser = ({ user, msgAlert }) => {\n  const [usersJobs, setUsersJobs] = useState([])\n\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    const getAllJobs = async () => {\n      try {\n        const res = await indexUsersJobs(user)\n        setUsersJobs(res.data.jobs)\n      } catch (error) {\n        // Alert the user, that they failed to sign up\n        msgAlert({\n          heading: 'Jobs Cant be displayed: ' + error.message,\n          message: 'Cant index Job',\n          // this will be red\n          variant: 'danger'\n        })\n      }\n    }\n    getAllJobs()\n  }, [])\n\n  if (!usersJobs.length) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  }\n  const jobList = usersJobs.map(job => (\n    <div className='jobs' key={job._id}>\n      <h5>\n        <Link to={`/jobs/${job._id}`}>{job.company}</Link>\n      </h5>\n      <h5>{job.title}</h5>\n      <span className='jobDate'>{format(job.createdAt)}</span>\n      <h6>{job.description}</h6>\n      <h6>Budget: $ {job.budget} USD</h6>\n      <JobDate date={job.date} />\n      {/* <h6>{job.owner.username} Job Posting</h6> */}\n    </div>\n  ))\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Your Job Board</h3>\n        <ul>{jobList}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport default AllJobsForOneUser\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, useParams } from 'react-router-dom'\n\nimport { showJob, updateJob } from '../../../api/job'\nimport JobForm from '../JobForm/JobForm'\n\nconst EditJob = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [company, setCompany] = useState('')\n  const [description, setDescription] = useState('')\n  const [budget, setBudget] = useState('')\n  const [date, setDate] = useState('')\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams()\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await showJob(id, user)\n        setTitle(res.data.job.title)\n        setCompany(res.data.job.company)\n        setDescription(res.data.job.description)\n        setBudget(res.data.job.budget)\n        setDate(res.data.job.date)\n      } catch (error) {\n        msgAlert({\n          heading: 'Failed to load post',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      await updateJob(id, title, company, description, budget, date, user)\n      setUpdated(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to update post',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (updated) {\n    // Navigate to the 'show' page\n    return <Navigate to={`/jobs/${id}`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-md-3 mx-auto mt-5'>\n        <h3>Edit Job Post</h3>\n        <JobForm\n          handleSubmit={handleSubmit}\n          title={title}\n          company={company}\n          description={description}\n          budget={+budget}\n          date={date}\n          setTitle={setTitle}\n          setCompany={setCompany}\n          setDescription={setDescription}\n          setBudget={setBudget}\n          setDate={setDate}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default EditJob\n","import React from 'react'\nimport './Footer.scss'\nexport default function Footer () {\n  return (\n    <div className=\"main-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          {/* column\n          <div className=\"col\">\n            <h4>Honest Installs</h4>\n            <ul className='list-unstyled'>\n              <li>917-675-1559</li>\n              <li>Brooklyn, New York</li>\n              <li></li>\n            </ul>\n          </div> */}\n          <hr />\n          <div className='row footer'>\n            <p className='col-sm'>\n                &copy;{new Date().getFullYear()} Honest Installs | All rights reserved| Terms Of Service | Privacy\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\nimport './global.scss'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport HomePage from './components/Home/HomePage'\nimport IndexJobs from './components/jobs/Index/IndexJobs'\nimport CreateJobs from './components/jobs/Create/CreateJob'\nimport OneJob from './components/jobs/Show/OneJob'\nimport AllUsers from './components/auth/IndexUsers'\nimport AllJobsForOneUser from './components/jobs/AllForOneUser/AllJobsForOneUser'\nimport EditJob from './components/jobs/Edit/EditJob'\nimport Footer from './components/Footer/Footer'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='page-container'>\n        <div className='content-wrap'>\n\n          <Routes>\n            <Route\n              exact path='/'\n              element={\n                <HomePage user={user} />\n              }\n            />\n            <Route\n              path='/sign-up'\n              element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n            />\n            <Route\n              path='/sign-in'\n              element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n            />\n            <Route\n              path='/sign-out'\n              element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} />}\n            />\n            <Route\n              path='/change-password'\n              element={<ChangePassword msgAlert={msgAlert} user={user} />}\n            />\n\n            <Route\n              path='/users'\n              element={<AllUsers msgAlert={msgAlert} user={user}/>}\n            />\n\n            <Route\n              path='/jobs/create'\n              element={<CreateJobs msgAlert={msgAlert} user={user} />}\n            />\n            <Route\n              path='/jobs/owner'\n              element={<AllJobsForOneUser msgAlert={msgAlert} user={user} />}\n            />\n\n            <Route\n              path='/jobs/:id'\n              element={<OneJob msgAlert={msgAlert} user={user} />}\n            />\n            <Route\n              path='/jobs'\n              element={<IndexJobs msgAlert={msgAlert} user={user} />}\n            />\n\n            <Route\n              path='/jobs/:id/edit'\n              element={<EditJob msgAlert={msgAlert} user={user} />}\n            />\n          </Routes>\n        </div>\n        <Footer />\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}